services:
    
  #python app
  python-app:
    image: ghcr.io/riccardo-cpt/dpage/test-app
    build:
      context: ./python-app
      #Build variables
      args:
        PYTHON_VERSION: ${PYTHON_VERSION}
        UID: ${UID}
    env_file:
        .env
    #container variables
    environment:
        - PYTHONDONTWRITEBYTECODE=${PYTHONDONTWRITEBYTECODE}
        - PYTHONUNBUFFERED=${PYTHONUNBUFFERED}
        - PG_HOST=${PG_HOST}
        - PG_NAME=${PG_DATABASE}
        - PG_USER=${PG_USER}
        - PG_PASSWORD=${PG_PASSWORD}
    user: ${UID}
    depends_on:
        postgres-db:
            condition: service_healthy
    command: ["python", "main.py"]
  
  #DB postgres
  postgres-db:
    image: ghcr.io/riccardo-cpt/dpage/postgres:17.5-alpine3.22
    restart: always
    volumes:
        - db-data:/var/lib/postgresql/data
        - ./postgres-db/init.sql:/docker-entrypoint-initdb.d/init.sql #define initialization script to create user localhost
    env_file: .env
    environment:
      POSTGRES_DB: ${PG_DATABASE}
      PGUSER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_HOST: ${PG_HOST} #host name must be equal as image name
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${PG_USER} -d ${PG_DATABASE}'"]
      interval: 10s
      timeout: 10s
      retries: 5

  #pgadmin
  pgadmin:
    image: ghcr.io/riccardo-cpt/dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: new_user@gmail.com
      PGADMIN_DEFAULT_PASSWORD: ${PG_PASSWORD}
    ports:
      - "80:80"
      
volumes:
  db-data:

